{"version":3,"file":"static/js/947.68bbc226.chunk.js","mappings":"4LAEaA,E,QAASC,GAAAA,OAAH,+eAKN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAC1B,SAAAF,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAtB,IAGL,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,IAAnB,IACU,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,OAAOE,OAAnB,IACX,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,QAAQC,IAApB,IACM,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,MAAMC,EAAlB,IACJ,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,QAAQL,OAApB,IAKO,SAAAP,GAAC,OAAIA,EAAEC,MAAMI,OAAOQ,SAAnB,IACZ,SAAAb,GAAC,OAAIA,EAAEC,MAAMI,OAAOS,KAAnB,G,mJClBDC,GAAahB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,oFAGd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGGe,EAAQlB,EAAAA,GAAAA,MAAH,qFAEE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACJ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,UAAUe,CAAtB,IAILC,GAAQpB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAH,gPAGF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAtB,IACJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMO,QAAQa,MAApB,IACK,SAAArB,GAAC,OAAIA,EAAEC,MAAMI,OAAOiB,MAAnB,IACA,SAAAtB,GAAC,OAAIA,EAAEC,MAAMS,MAAMC,EAAlB,IAIF,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,QAAQC,SAApB,I,UCrBbU,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGCC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CAAQL,cAAeA,EAAeM,SANnB,SAAC,EAAqBC,GAAa,IAAhCN,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAC7BE,GAASI,EAAAA,EAAAA,IAAM,CAAEP,MAAAA,EAAOC,SAAAA,KACxBK,EAAQE,WACT,EAGC,UACE,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,UAACnB,EAAD,CAAYoB,aAAa,MAAzB,WACE,UAAClB,EAAD,YACE,oCACA,SAACE,EAAD,CAAOiB,KAAK,OAAOC,KAAK,QAAQC,UAAQ,QAE1C,UAACrB,EAAD,YACE,uCACA,SAACE,EAAD,CAAOiB,KAAK,WAAWC,KAAK,WAAWC,UAAQ,QAGjD,SAAC,IAAD,CAAQF,KAAK,SAAb,yBAKT,EC3BD,EATkB,WAChB,OACE,iCACE,uCACA,SAACV,EAAD,MAGL,C","sources":["components/contacts/Button/Button.styled.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 128px;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: 500;\n  cursor: pointer;\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.primary};\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  box-shadow: ${p => p.theme.shadows.primary};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n    color: ${p => p.theme.colors.muted};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const Label = styled.label`\n  div {\n    padding-left: ${p => p.theme.space[2]}px;\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 240px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.secondary};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport { Box } from 'components/Box';\nimport { Button } from 'components/contacts/Button/Button.styled';\nimport { Input, Label, FormStyled } from './LoginForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, actions) => {\n    dispatch(logIn({ email, password }));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <Box my={4}>\n        <FormStyled autoComplete=\"off\">\n          <Label>\n            <div>Email</div>\n            <Input type=\"mail\" name=\"email\" required />\n          </Label>\n          <Label>\n            <div>Password</div>\n            <Input type=\"password\" name=\"password\" required />\n          </Label>\n\n          <Button type=\"submit\">Login</Button>\n        </FormStyled>\n      </Box>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <h1>LoginPage</h1>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Button","styled","p","theme","space","fontSizes","s","colors","text","primary","borders","none","radii","sm","shadows","secondary","muted","FormStyled","Form","Label","m","Input","Field","normal","border","initialValues","email","password","LoginForm","dispatch","useDispatch","onSubmit","actions","logIn","resetForm","Box","my","autoComplete","type","name","required"],"sourceRoot":""}