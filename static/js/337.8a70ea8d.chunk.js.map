{"version":3,"file":"static/js/337.8a70ea8d.chunk.js","mappings":"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","sources":["components/contacts/Button/Button.styled.js","components/contacts/ContactForm/ContactForm.styled.js","components/contacts/ContactForm/ContactForm.jsx","components/contacts/Filter/Filter.styled.js","components/contacts/Filter/Filter.jsx","components/contacts/ContactList/ContactList.styled.js","components/contacts/ContactList/ContactList.jsx","components/contacts/Notification/Notification.styled.js","components/contacts/Notification/Notification.jsx","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 128px;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: 500;\n  cursor: pointer;\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.primary};\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  box-shadow: ${p => p.theme.shadows.primary};\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.secondary};\n    color: ${p => p.theme.colors.muted};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const Label = styled.label`\n  div {\n    padding-left: ${p => p.theme.space[2]}px;\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 240px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.secondary};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Formik } from 'formik';\nimport { Box } from 'components/Box';\nimport { Button } from 'components/contacts/Button/Button.styled';\nimport { Input, Label, FormStyled } from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, number }, actions) => {\n    dispatch(addContact({ name, number }));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <Box my={4}>\n        <FormStyled autoComplete=\"off\">\n          <Label>\n            <div>Name</div>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n          <Label>\n            <div>Number</div>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </FormStyled>\n      </Box>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  span {\n    padding-left: ${p => p.theme.space[2]}px;\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n\nexport const Field = styled.input`\n  display: block;\n  width: 60%;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.secondary};\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { Label, Field } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    return () => dispatch(setFilter(''));\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Label>\n      <span>Find contacts by name:</span>\n      <Field type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  background-color: ${p => p.theme.colors.muted};\n  border-radius: ${p => p.theme.radii.sm};\n  box-shadow: ${p => p.theme.shadows.secondary};\n\n  span {\n    font-weight: 500;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport { Button } from 'components/contacts/Button/Button.styled';\nimport { List, Item } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, id, phone }) => (\n        <Item key={id}>\n          <span>{name}:</span> {phone}\n          <Button type=\"button\" onClick={() => handleDelete(id)}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  letter-spacing: 0.05rem;\n`;\n","import { TbMoodEmpty } from 'react-icons/tb';\nimport { Box } from 'components/Box';\nimport { Text } from './Notification.styled';\n\nexport const Notification = () => {\n  return (\n    <Box display=\"flex\" gridGap={3} alignItems=\"center\">\n      <TbMoodEmpty size={24} />\n      <Text>You haven't added any contact!</Text>\n    </Box>\n  );\n};\n","import { ProgressBar } from 'react-loader-spinner';\nimport { Box } from 'components/Box';\n\nexport const Loader = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <ProgressBar\n        height=\"60\"\n        width=\"60\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#4b4b4b\"\n        barColor=\"#304498\"\n      />\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n// selectors\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsContacts,\n  selectIsContactsShown,\n  selectIsLoading,\n  selectError,\n} from 'redux/selectors';\n\nimport { Box } from 'components/Box';\nimport { ContactForm } from 'components/contacts/ContactForm/ContactForm';\nimport { Filter } from 'components/contacts/Filter/Filter';\nimport { ContactList } from 'components/contacts/ContactList/ContactList';\nimport { Notification } from 'components/contacts/Notification/Notification';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isContacts = useSelector(selectIsContacts);\n  const isContactsShown = useSelector(selectIsContactsShown);\n  const isLoading = useSelector(selectIsLoading);\n  const errorMessage = useSelector(selectError);\n  return (\n    <Box p={5} as=\"main\">\n      <Box\n        width=\"430px\"\n        p={4}\n        mx=\"auto\"\n        bg=\"white\"\n        borderRadius=\"md\"\n        boxShadow=\"primary\"\n        color=\"text\"\n      >\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Box mt={4}>\n          {errorMessage && <p>{errorMessage}</p>}\n          {isContacts && <Filter />}\n          {isLoading && <Loader />}\n          {isContactsShown && <ContactList />}\n          {!isContacts && !isLoading && !errorMessage && <Notification />}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Button","styled","p","theme","space","fontSizes","s","colors","text","primary","borders","none","radii","sm","shadows","secondary","muted","FormStyled","Form","Label","m","Input","Field","normal","border","initialValues","name","number","ContactForm","dispatch","useDispatch","onSubmit","actions","addContact","resetForm","Box","my","autoComplete","type","pattern","title","required","Filter","filter","useSelector","selectFilter","useEffect","setFilter","value","onChange","e","target","List","Item","ContactList","filteredContacts","selectFilteredContacts","map","id","phone","onClick","deleteContact","handleDelete","Text","Notification","display","gridGap","alignItems","size","Loader","justifyContent","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","fetchContacts","isContacts","selectIsContacts","isContactsShown","selectIsContactsShown","isLoading","selectIsLoading","errorMessage","selectError","as","mx","bg","borderRadius","boxShadow","color","mt"],"sourceRoot":""}